/*
* Copyright (c) 2020 The ZMK Contributors
*
* SPDX-License-Identifier: MIT
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
            layers = <0 1 2>;
        };

        escape {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
            layers = <0 1 2>;
        };

        backspace {
            bindings = <&kp BSPC>;
            key-positions = <12 13>;
            layers = <0 1 2>;
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <16 17>;
            layers = <0 1 2>;
        };

        enter {
            bindings = <&kp RET>;
            key-positions = <19 18>;
            layers = <1 0 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Colemak {
            bindings = <
       &kp Q       &kp W       &kp F   &kp P       &kp B              &kp J   &kp L           &kp U         &kp Y        &kp SEMI
       &kp A       &kp R       &kp S   &kp T       &kp G              &kp M   &kp N           &kp E         &kp I           &kp O
 &mt LCTRL Z  &mt LGUI X  &mt LALT C   &kp D       &kp V              &kp K   &kp H  &mt RALT COMMA  &mt RGUI DOT  &mt RCTL SLASH
                                       &mo 1  &kp LSHIFT          &kp SPACE   &mo 2
            >;
        };

        Symbols {
            bindings = <
    &kp N1    &kp N2    &kp N3    &kp N4  &kp N5           &kp N6     &kp N7     &kp N8    &kp N9    &kp N0
     &none     &none   &kp DEL  &kp BSPC   &none          &kp SQT  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT
 &sk LCTRL  &sk LGUI  &sk LALT     &none   &none            &none  &kp GRAVE  &kp COMMA   &kp DOT  &kp BSLH
                                  &trans  &trans           &trans     &trans
            >;
        };

        Navigation {
            bindings = <
   &kp ESC     &none     &none   &none   &none          &kp PG_UP     &none    &kp UP      &none  &kp K_CMENU
   &kp TAB     &none     &none   &none   &none          &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT      &kp RET
 &kp LCTRL  &kp LGUI  &kp LALT   &none   &none              &none  &kp HOME   &kp END      &none        &none
                                &trans  &trans             &trans    &trans
            >;
        };

        Extra {
            bindings = <
 &kp F1   &kp F2   &kp F3   &kp F4        &none                 &to 4  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_CLR
 &kp F5   &kp F6   &kp F7   &kp F8        &none          &out OUT_TOG  &kp C_BRI_DN  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_UP
 &kp F9  &kp F10  &kp F11  &kp F12  &bootloader           &bootloader         &none         &none         &none         &none
                            &trans       &trans                &trans        &trans
            >;
        };

        Gaming {
            bindings = <
    &kp TAB   &kp Q   &kp W   &kp E      &kp R              &none     &none    &kp UP      &none    &kp DEL
 &kp LSHIFT   &kp A   &kp S   &kp D      &kp F            &kp TAB  &kp LEFT  &kp DOWN  &kp RIGHT   &kp BSPC
  &kp LCTRL   &kp Z   &kp X   &kp C      &kp V            &kp ESC     &none     &none      &none  &kp ENTER
                              &mo 5  &kp SPACE          &kp SPACE     &mo 5
            >;
        };

        Gaming_raise {
            bindings = <
 &kp ESC  &kp N1  &kp N2  &kp N3  &kp N4           &to 0  &trans  &trans  &trans  &trans
  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9          &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
                          &trans  &trans          &trans  &trans
            >;
        };
    };
};
